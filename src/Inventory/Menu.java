/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventory;

import com.placeholder.PlaceHolder;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import java.util.HashMap;
import java.util.Map;
import java.util.Timer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
   import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRDataSource;
   import net.sf.jasperreports.engine.JRException;
   import net.sf.jasperreports.engine.JasperFillManager;
   import net.sf.jasperreports.engine.JasperPrint;
   import net.sf.jasperreports.engine.data.JRTableModelDataSource;
   import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Badyo
 */
public class Menu extends javax.swing.JFrame {
    PlaceHolder holder;
    Date date = new Date();

    static String permuid = "";
    /**
     * Creates new form Menu
     */
    public Menu(){}
    
    public Menu(String user,String usertype,String userid) {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        jLabel7.setText(usertype + ", " +user);
        permuid = userid;
        paneltraverse(Body,Stock);
        ChangeColor(Menu, btnStock);
           dateItemAdd.setDate(date);
             dateItemRemove.setDate(date);
             reddateF.setDate(date);
             reddateT.setDate(date);
             reddateF1.setDate(date);
             reddateT1.setDate(date);
             logdateF.setDate(date);
             logdateT.setDate(date);
             loadCurrentEmail();
              if("User".equals(usertype)){
                  btnSettings.setEnabled(false);
                  btnReports.setEnabled(false);
              }
        holder = new PlaceHolder(txtSearchItems, "Search by item name");
           holder = new PlaceHolder(ItemNameAdd, "Click the search icon to fill");
           holder = new PlaceHolder(NameRemove, "Click the search icon to fill");
        holder = new PlaceHolder(NameRemove, "Click the search icon to search for the item");
    FillTable(tblReduction,"SELECT Iname,removedate,removal.quantity,status,username from removal "+
                 "INNER JOIN items on removal.itemid = items.id INNER join user on removal.userid = user.id ");
    FillTable(tableAdditionRe,"SELECT Iname,shipdate,shipment.quantity,username from shipment "+
                 "INNER JOIN items on shipment.itemid = items.id INNER join user on shipment.userid = user.id WHERE status = 1");
    FillTable(tablelog,"SELECT username,time,action from logs INNER JOIN user on logs.userid = user.id ");
         FillTable(tablenewuser,"SELECT `Id`, `username`, type from user where id != " +Integer.parseInt(permuid)+"");
           FillTable(tblStock,"SELECT  `Iname`, quantity,unit,perunit from items");
         FillTable(tableItem,"SELECT `Id`, `Iname`, quantity from items");
          FillTable(tblRemoval,"SELECT removal.id,removal.itemid, `Iname`, removal.quantity,status from removal INNER JOIN items on removal.itemid = items.id where isRemoved = 0");
           FillTable(tblAddition,"SELECT shipment.id,shipment.itemid, `Iname`, shipment.quantity from shipment INNER JOIN items on shipment.itemid = items.id where status = 0");
          setEmailThread();
    }
    
    
    
    
    // Color on selected menu item

      public final void ChangeColor (JPanel panel, JButton button) {
for (Component C : panel.getComponents())
{    
    if (C instanceof JButton){
       ((JButton) C).setBackground(new Color(255, 255, 255));
       button.setBackground(new Color(230,240,218));
    } else {
        button.setBackground(new Color(255, 255, 255));
    }
}
}

    // Setting the prefered panel

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Status = new javax.swing.ButtonGroup();
        Address = new javax.swing.ButtonGroup();
        DialogSearchItemAdd = new javax.swing.JDialog();
        jPanel14 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        txtSearchItemAdd = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        tableItemAddS = new javax.swing.JTable();
        btnSItem4 = new javax.swing.JButton();
        DialogSearchItemRemove = new javax.swing.JDialog();
        jPanel17 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        txtSearchItemRemove = new javax.swing.JTextField();
        jScrollPane10 = new javax.swing.JScrollPane();
        tableItemRemove = new javax.swing.JTable();
        btnSItem5 = new javax.swing.JButton();
        Header = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Menu = new javax.swing.JPanel();
        btnStock = new javax.swing.JButton();
        btnInventory = new javax.swing.JButton();
        btnReports = new javax.swing.JButton();
        btnSettings = new javax.swing.JButton();
        btnSettings2 = new javax.swing.JButton();
        Body = new javax.swing.JPanel();
        Stock = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStock = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtSearchStock = new javax.swing.JTextField();
        btnReportStock = new javax.swing.JLabel();
        Inventory = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Manage = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tableItem = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        txtNameItem = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        txtUnitItem = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        txtCountItem = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        txtLowItem = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        btnSItem = new javax.swing.JButton();
        btnUItem = new javax.swing.JButton();
        btnCItem = new javax.swing.JButton();
        btnDItem = new javax.swing.JButton();
        jLabel50 = new javax.swing.JLabel();
        txtSearchItems = new javax.swing.JTextField();
        Add = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnSItemAdd = new javax.swing.JButton();
        btnRemoveAdd = new javax.swing.JButton();
        btnStockS = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAddition = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        ItemQuanAdd = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        ItemidAdd = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        dateItemAdd = new com.toedter.calendar.JDateChooser();
        ItemNameAdd = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        Remove = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        NameRemove = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        ItemQuanRemove = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        dateItemRemove = new com.toedter.calendar.JDateChooser();
        jLabel55 = new javax.swing.JLabel();
        ItemidRemove = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        ComboRemove = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblRemoval = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        btnSItemRemove = new javax.swing.JButton();
        btnRemoveRemove = new javax.swing.JButton();
        btnStockRemove = new javax.swing.JButton();
        Reports = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        reddateF = new com.toedter.calendar.JDateChooser();
        reddateT = new com.toedter.calendar.JDateChooser();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        redname = new javax.swing.JTextField();
        btnReportReduction = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblReduction = new javax.swing.JTable();
        searchreduction = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        redS = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        redPerson = new javax.swing.JTextField();
        searchreduction1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        reddateF1 = new com.toedter.calendar.JDateChooser();
        reddateT1 = new com.toedter.calendar.JDateChooser();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        redname1 = new javax.swing.JTextField();
        btnReportReduction1 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableAdditionRe = new javax.swing.JTable();
        searchreduction2 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        redPerson1 = new javax.swing.JTextField();
        searchreduction3 = new javax.swing.JLabel();
        logsR = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        logdateF = new com.toedter.calendar.JDateChooser();
        jLabel38 = new javax.swing.JLabel();
        logdateT = new com.toedter.calendar.JDateChooser();
        btnReportReduction2 = new javax.swing.JLabel();
        searchreduction4 = new javax.swing.JLabel();
        searchreduction5 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablelog = new javax.swing.JTable();
        jLabel60 = new javax.swing.JLabel();
        logperson = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        logaction = new javax.swing.JTextField();
        Settings = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        WebFrom = new javax.swing.JTextField();
        WebTo = new javax.swing.JTextField();
        SaveWeb = new javax.swing.JLabel();
        WebPass = new javax.swing.JTextField();
        Website = new javax.swing.JTextField();
        ClearWeb = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        GFrom = new javax.swing.JTextField();
        GTo = new javax.swing.JTextField();
        ClearGmail = new javax.swing.JLabel();
        GPass = new javax.swing.JTextField();
        SaveGmail = new javax.swing.JLabel();
        ComboEmail = new javax.swing.JComboBox<>();
        jPanel18 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        areaEmail = new javax.swing.JTextArea();
        SavePreference = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        currentPass = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        Confirmnew = new javax.swing.JPasswordField();
        Newpass = new javax.swing.JTextField();
        viewconfirm = new javax.swing.JCheckBox();
        btnSave3 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablenewuser = new javax.swing.JTable();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        ComboType = new javax.swing.JComboBox<>();
        jPanel13 = new javax.swing.JPanel();
        SaveNewUser = new javax.swing.JButton();
        SaveNewUser1 = new javax.swing.JButton();
        DeleteNewUser = new javax.swing.JButton();
        UserNamenew = new javax.swing.JTextField();

        DialogSearchItemAdd.setTitle("Select Item");

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search_20px.png"))); // NOI18N

        txtSearchItemAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearchItemAdd.setToolTipText("Search by department name");
        txtSearchItemAdd.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtSearchItemAddCaretUpdate(evt);
            }
        });

        tableItemAddS.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tableItemAddS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableItemAddS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableItemAddSMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tableItemAddS);
        if (tableItemAddS.getColumnModel().getColumnCount() > 0) {
            tableItemAddS.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        btnSItem4.setBackground(new java.awt.Color(255, 164, 19));
        btnSItem4.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnSItem4.setForeground(new java.awt.Color(255, 255, 255));
        btnSItem4.setText("Select");
        btnSItem4.setBorderPainted(false);
        btnSItem4.setContentAreaFilled(false);
        btnSItem4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSItem4.setOpaque(true);
        btnSItem4.setPreferredSize(new java.awt.Dimension(74, 22));
        btnSItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSItem4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(btnSItem4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel14Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel14Layout.createSequentialGroup()
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSearchItemAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(247, Short.MAX_VALUE)
                .addComponent(btnSItem4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel14Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSearchItemAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(84, 84, 84)))
        );

        javax.swing.GroupLayout DialogSearchItemAddLayout = new javax.swing.GroupLayout(DialogSearchItemAdd.getContentPane());
        DialogSearchItemAdd.getContentPane().setLayout(DialogSearchItemAddLayout);
        DialogSearchItemAddLayout.setHorizontalGroup(
            DialogSearchItemAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(DialogSearchItemAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(DialogSearchItemAddLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        DialogSearchItemAddLayout.setVerticalGroup(
            DialogSearchItemAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(DialogSearchItemAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(DialogSearchItemAddLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        DialogSearchItemRemove.setTitle("Select Item");

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search_20px.png"))); // NOI18N

        txtSearchItemRemove.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearchItemRemove.setToolTipText("Search by department name");
        txtSearchItemRemove.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtSearchItemRemoveCaretUpdate(evt);
            }
        });

        tableItemRemove.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tableItemRemove.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableItemRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableItemRemoveMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(tableItemRemove);
        if (tableItemRemove.getColumnModel().getColumnCount() > 0) {
            tableItemRemove.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        btnSItem5.setBackground(new java.awt.Color(255, 164, 19));
        btnSItem5.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnSItem5.setForeground(new java.awt.Color(255, 255, 255));
        btnSItem5.setText("Select");
        btnSItem5.setBorderPainted(false);
        btnSItem5.setContentAreaFilled(false);
        btnSItem5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSItem5.setOpaque(true);
        btnSItem5.setPreferredSize(new java.awt.Dimension(74, 22));
        btnSItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSItem5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(btnSItem5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel17Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel17Layout.createSequentialGroup()
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSearchItemRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(247, Short.MAX_VALUE)
                .addComponent(btnSItem5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel17Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSearchItemRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(84, 84, 84)))
        );

        javax.swing.GroupLayout DialogSearchItemRemoveLayout = new javax.swing.GroupLayout(DialogSearchItemRemove.getContentPane());
        DialogSearchItemRemove.getContentPane().setLayout(DialogSearchItemRemoveLayout);
        DialogSearchItemRemoveLayout.setHorizontalGroup(
            DialogSearchItemRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(DialogSearchItemRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(DialogSearchItemRemoveLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        DialogSearchItemRemoveLayout.setVerticalGroup(
            DialogSearchItemRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(DialogSearchItemRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(DialogSearchItemRemoveLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Equity Bank Inventory Control");
        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(845, 523));
        getContentPane().setLayout(new java.awt.BorderLayout(10, 10));

        Header.setBackground(new java.awt.Color(255, 255, 255));
        Header.setMinimumSize(new java.awt.Dimension(776, 72));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(169, 75, 1));
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/User_25px.png"))); // NOI18N
        jLabel7.setText("Administrator");
        jLabel7.setIconTextGap(5);

        jLabel8.setFont(new java.awt.Font("Cambria", 0, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(169, 75, 1));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Inventory Management");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/logo.jpg"))); // NOI18N

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(88, 88, 88)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(47, 47, 47)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeaderLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getContentPane().add(Header, java.awt.BorderLayout.PAGE_START);

        Menu.setBackground(new java.awt.Color(255, 255, 255));
        Menu.setMinimumSize(new java.awt.Dimension(100, 420));
        Menu.setPreferredSize(new java.awt.Dimension(110, 420));
        Menu.setLayout(new java.awt.GridLayout(6, 1));

        btnStock.setBackground(new java.awt.Color(255, 255, 255));
        btnStock.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-scan-stock-filled-35.png"))); // NOI18N
        btnStock.setText("Stock");
        btnStock.setBorderPainted(false);
        btnStock.setContentAreaFilled(false);
        btnStock.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnStock.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnStock.setOpaque(true);
        btnStock.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStockActionPerformed(evt);
            }
        });
        Menu.add(btnStock);

        btnInventory.setBackground(new java.awt.Color(255, 255, 255));
        btnInventory.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnInventory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-inventory-flow-filled-35.png"))); // NOI18N
        btnInventory.setText("Inventory");
        btnInventory.setBorderPainted(false);
        btnInventory.setContentAreaFilled(false);
        btnInventory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInventory.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnInventory.setOpaque(true);
        btnInventory.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventoryActionPerformed(evt);
            }
        });
        Menu.add(btnInventory);

        btnReports.setBackground(new java.awt.Color(255, 255, 255));
        btnReports.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnReports.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-statistics-filled-35.png"))); // NOI18N
        btnReports.setText("Reports");
        btnReports.setBorderPainted(false);
        btnReports.setContentAreaFilled(false);
        btnReports.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReports.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnReports.setOpaque(true);
        btnReports.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportsActionPerformed(evt);
            }
        });
        Menu.add(btnReports);

        btnSettings.setBackground(new java.awt.Color(255, 255, 255));
        btnSettings.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnSettings.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-settings-filled-35.png"))); // NOI18N
        btnSettings.setText("Settings");
        btnSettings.setBorderPainted(false);
        btnSettings.setContentAreaFilled(false);
        btnSettings.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSettings.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSettings.setOpaque(true);
        btnSettings.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettingsActionPerformed(evt);
            }
        });
        Menu.add(btnSettings);

        btnSettings2.setBackground(new java.awt.Color(255, 255, 255));
        btnSettings2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        btnSettings2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-exit-filled-35.png"))); // NOI18N
        btnSettings2.setText("Log out");
        btnSettings2.setBorderPainted(false);
        btnSettings2.setContentAreaFilled(false);
        btnSettings2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSettings2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSettings2.setOpaque(true);
        btnSettings2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSettings2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettings2ActionPerformed(evt);
            }
        });
        Menu.add(btnSettings2);

        getContentPane().add(Menu, java.awt.BorderLayout.LINE_START);

        Body.setBackground(new java.awt.Color(255, 255, 255));
        Body.setLayout(new java.awt.CardLayout());

        Stock.setBackground(new java.awt.Color(255, 255, 255));

        tblStock.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Pencils", "120", "pcs", null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item Name", "Quantity", "Unit", "Per Unit Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStock.setRowHeight(18);
        jScrollPane1.setViewportView(tblStock);
        if (tblStock.getColumnModel().getColumnCount() > 0) {
            tblStock.getColumnModel().getColumn(0).setResizable(false);
            tblStock.getColumnModel().getColumn(0).setPreferredWidth(150);
            tblStock.getColumnModel().getColumn(1).setResizable(false);
            tblStock.getColumnModel().getColumn(1).setPreferredWidth(30);
            tblStock.getColumnModel().getColumn(2).setResizable(false);
            tblStock.getColumnModel().getColumn(2).setPreferredWidth(40);
            tblStock.getColumnModel().getColumn(3).setResizable(false);
            tblStock.getColumnModel().getColumn(3).setPreferredWidth(20);
        }

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search_20px.png"))); // NOI18N

        txtSearchStock.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtSearchStockCaretUpdate(evt);
            }
        });
        txtSearchStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchStockActionPerformed(evt);
            }
        });

        btnReportStock.setBackground(new java.awt.Color(169, 75, 1));
        btnReportStock.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReportStock.setForeground(new java.awt.Color(255, 255, 255));
        btnReportStock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnReportStock.setText("Generate Report");
        btnReportStock.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReportStock.setOpaque(true);
        btnReportStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReportStockMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout StockLayout = new javax.swing.GroupLayout(Stock);
        Stock.setLayout(StockLayout);
        StockLayout.setHorizontalGroup(
            StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StockLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
                    .addGroup(StockLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearchStock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReportStock, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        StockLayout.setVerticalGroup(
            StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StockLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReportStock, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(StockLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtSearchStock, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                .addContainerGap())
        );

        Body.add(Stock, "card4");

        Inventory.setBackground(new java.awt.Color(255, 255, 255));
        Inventory.setLayout(new java.awt.CardLayout());

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTabbedPane1.setOpaque(true);

        tableItem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tableItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "Pencils", null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "id", "Item", "qty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tableItem.setRowHeight(18);
        tableItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableItemMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tableItem);
        if (tableItem.getColumnModel().getColumnCount() > 0) {
            tableItem.getColumnModel().getColumn(0).setMaxWidth(30);
        }

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        jLabel49.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel49.setText("Item Name");

        txtNameItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel51.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel51.setText("Unit");

        txtUnitItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel52.setText("Per unit count");

        txtCountItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel53.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel53.setText("Low qty count");

        txtLowItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setLayout(new java.awt.GridLayout(2, 2, 10, 10));

        btnSItem.setBackground(new java.awt.Color(255, 164, 19));
        btnSItem.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnSItem.setForeground(new java.awt.Color(255, 255, 255));
        btnSItem.setText("Save");
        btnSItem.setBorderPainted(false);
        btnSItem.setContentAreaFilled(false);
        btnSItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSItem.setOpaque(true);
        btnSItem.setPreferredSize(new java.awt.Dimension(74, 22));
        btnSItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSItemActionPerformed(evt);
            }
        });
        jPanel15.add(btnSItem);

        btnUItem.setBackground(new java.awt.Color(244, 244, 244));
        btnUItem.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnUItem.setForeground(new java.awt.Color(255, 255, 255));
        btnUItem.setText("Update");
        btnUItem.setBorderPainted(false);
        btnUItem.setContentAreaFilled(false);
        btnUItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUItem.setEnabled(false);
        btnUItem.setOpaque(true);
        btnUItem.setPreferredSize(new java.awt.Dimension(74, 22));
        btnUItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUItemActionPerformed(evt);
            }
        });
        jPanel15.add(btnUItem);

        btnCItem.setBackground(new java.awt.Color(255, 164, 19));
        btnCItem.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnCItem.setForeground(new java.awt.Color(255, 255, 255));
        btnCItem.setText("Clear Fields");
        btnCItem.setBorderPainted(false);
        btnCItem.setContentAreaFilled(false);
        btnCItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCItem.setOpaque(true);
        btnCItem.setPreferredSize(new java.awt.Dimension(74, 22));
        btnCItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCItemActionPerformed(evt);
            }
        });
        jPanel15.add(btnCItem);

        btnDItem.setBackground(new java.awt.Color(244, 244, 244));
        btnDItem.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnDItem.setForeground(new java.awt.Color(255, 255, 255));
        btnDItem.setText("Delete");
        btnDItem.setBorderPainted(false);
        btnDItem.setContentAreaFilled(false);
        btnDItem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDItem.setEnabled(false);
        btnDItem.setOpaque(true);
        btnDItem.setPreferredSize(new java.awt.Dimension(74, 22));
        btnDItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDItemActionPerformed(evt);
            }
        });
        jPanel15.add(btnDItem);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel53)
                                .addGap(6, 6, 6)
                                .addComponent(txtLowItem, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel52)
                                .addGap(9, 9, 9)
                                .addComponent(txtCountItem))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel49))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtNameItem, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUnitItem))))
                        .addGap(10, 10, 10))))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNameItem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUnitItem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel52, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCountItem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLowItem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search_20px.png"))); // NOI18N

        txtSearchItems.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearchItems.setToolTipText("Search by department name");
        txtSearchItems.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtSearchItemsCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout ManageLayout = new javax.swing.GroupLayout(Manage);
        Manage.setLayout(ManageLayout);
        ManageLayout.setHorizontalGroup(
            ManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageLayout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                    .addGroup(ManageLayout.createSequentialGroup()
                        .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSearchItems)))
                .addContainerGap())
        );
        ManageLayout.setVerticalGroup(
            ManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ManageLayout.createSequentialGroup()
                        .addGroup(ManageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSearchItems, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(ManageLayout.createSequentialGroup()
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 130, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manage Items", Manage);

        Add.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new java.awt.GridLayout(2, 2, 10, 10));

        btnSItemAdd.setBackground(new java.awt.Color(255, 164, 19));
        btnSItemAdd.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnSItemAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnSItemAdd.setText("Save");
        btnSItemAdd.setBorderPainted(false);
        btnSItemAdd.setContentAreaFilled(false);
        btnSItemAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSItemAdd.setOpaque(true);
        btnSItemAdd.setPreferredSize(new java.awt.Dimension(74, 22));
        btnSItemAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSItemAddActionPerformed(evt);
            }
        });
        jPanel4.add(btnSItemAdd);

        btnRemoveAdd.setBackground(new java.awt.Color(219, 79, 17));
        btnRemoveAdd.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnRemoveAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveAdd.setText("Remove");
        btnRemoveAdd.setBorderPainted(false);
        btnRemoveAdd.setContentAreaFilled(false);
        btnRemoveAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemoveAdd.setOpaque(true);
        btnRemoveAdd.setPreferredSize(new java.awt.Dimension(74, 22));
        btnRemoveAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAddActionPerformed(evt);
            }
        });
        jPanel4.add(btnRemoveAdd);

        btnStockS.setBackground(new java.awt.Color(255, 164, 19));
        btnStockS.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnStockS.setForeground(new java.awt.Color(255, 255, 255));
        btnStockS.setText("Send to stock");
        btnStockS.setBorderPainted(false);
        btnStockS.setContentAreaFilled(false);
        btnStockS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnStockS.setOpaque(true);
        btnStockS.setPreferredSize(new java.awt.Dimension(74, 22));
        btnStockS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStockSActionPerformed(evt);
            }
        });
        jPanel4.add(btnStockS);

        tblAddition.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblAddition.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Pencils", null, "120", "pcs"},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "itemid", "item name", "quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAddition.setRowHeight(18);
        jScrollPane2.setViewportView(tblAddition);
        if (tblAddition.getColumnModel().getColumnCount() > 0) {
            tblAddition.getColumnModel().getColumn(0).setMaxWidth(50);
            tblAddition.getColumnModel().getColumn(1).setMaxWidth(50);
            tblAddition.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Item Name");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Quantity");

        ItemQuanAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("item id");

        ItemidAdd.setEditable(false);
        ItemidAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Date");

        dateItemAdd.setBackground(new java.awt.Color(255, 255, 255));
        dateItemAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        ItemNameAdd.setEditable(false);
        ItemNameAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel54.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search_20px.png"))); // NOI18N
        jLabel54.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel54.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel54.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel54MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel17))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ItemQuanAdd)
                            .addComponent(ItemidAdd, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(ItemNameAdd)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(67, 67, 67)
                        .addComponent(dateItemAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateItemAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ItemNameAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel54, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ItemQuanAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ItemidAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout AddLayout = new javax.swing.GroupLayout(Add);
        Add.setLayout(AddLayout);
        AddLayout.setHorizontalGroup(
            AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLayout.createSequentialGroup()
                .addGroup(AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddLayout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(AddLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addContainerGap())
        );
        AddLayout.setVerticalGroup(
            AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddLayout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Item Addition", Add);

        Remove.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Item Name");

        NameRemove.setEditable(false);
        NameRemove.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Quantity");

        ItemQuanRemove.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Search_20px.png"))); // NOI18N
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Date");

        dateItemRemove.setBackground(new java.awt.Color(255, 255, 255));
        dateItemRemove.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel55.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel55.setText("item id");

        ItemidRemove.setEditable(false);
        ItemidRemove.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Status");

        ComboRemove.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Used", "Spoilt", "Mistaken" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addComponent(jLabel23)
                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(7, 7, 7)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ItemQuanRemove)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(NameRemove)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(dateItemRemove, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ComboRemove, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ItemidRemove))
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateItemRemove, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(NameRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ItemQuanRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ItemidRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(ComboRemove)))
                .addContainerGap())
        );

        tblRemoval.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblRemoval.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Pencils", "120", null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Itemid", "item name", "qty", "status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRemoval.setRowHeight(18);
        jScrollPane3.setViewportView(tblRemoval);
        if (tblRemoval.getColumnModel().getColumnCount() > 0) {
            tblRemoval.getColumnModel().getColumn(0).setMaxWidth(50);
            tblRemoval.getColumnModel().getColumn(1).setMaxWidth(50);
            tblRemoval.getColumnModel().getColumn(3).setMaxWidth(50);
        }

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(new java.awt.GridLayout(2, 2, 10, 10));

        btnSItemRemove.setBackground(new java.awt.Color(255, 164, 19));
        btnSItemRemove.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnSItemRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnSItemRemove.setText("Save");
        btnSItemRemove.setBorderPainted(false);
        btnSItemRemove.setContentAreaFilled(false);
        btnSItemRemove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSItemRemove.setOpaque(true);
        btnSItemRemove.setPreferredSize(new java.awt.Dimension(74, 22));
        btnSItemRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSItemRemoveActionPerformed(evt);
            }
        });
        jPanel6.add(btnSItemRemove);

        btnRemoveRemove.setBackground(new java.awt.Color(219, 79, 17));
        btnRemoveRemove.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnRemoveRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnRemoveRemove.setText("Remove");
        btnRemoveRemove.setBorderPainted(false);
        btnRemoveRemove.setContentAreaFilled(false);
        btnRemoveRemove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRemoveRemove.setOpaque(true);
        btnRemoveRemove.setPreferredSize(new java.awt.Dimension(74, 22));
        btnRemoveRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveRemoveActionPerformed(evt);
            }
        });
        jPanel6.add(btnRemoveRemove);

        btnStockRemove.setBackground(new java.awt.Color(255, 164, 19));
        btnStockRemove.setFont(new java.awt.Font("Yu Gothic UI Light", 1, 16)); // NOI18N
        btnStockRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnStockRemove.setText("Process");
        btnStockRemove.setBorderPainted(false);
        btnStockRemove.setContentAreaFilled(false);
        btnStockRemove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnStockRemove.setOpaque(true);
        btnStockRemove.setPreferredSize(new java.awt.Dimension(74, 22));
        btnStockRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStockRemoveActionPerformed(evt);
            }
        });
        jPanel6.add(btnStockRemove);

        javax.swing.GroupLayout RemoveLayout = new javax.swing.GroupLayout(Remove);
        Remove.setLayout(RemoveLayout);
        RemoveLayout.setHorizontalGroup(
            RemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RemoveLayout.createSequentialGroup()
                .addGroup(RemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RemoveLayout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(4, 4, 4))
                    .addGroup(RemoveLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addContainerGap())
        );
        RemoveLayout.setVerticalGroup(
            RemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RemoveLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RemoveLayout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Item Removal", Remove);

        Inventory.add(jTabbedPane1, "card2");

        Body.add(Inventory, "card3");

        Reports.setBackground(new java.awt.Color(255, 255, 255));
        Reports.setLayout(new java.awt.CardLayout());

        jTabbedPane2.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        reddateF.setBackground(new java.awt.Color(255, 255, 255));
        reddateF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        reddateT.setBackground(new java.awt.Color(255, 255, 255));
        reddateT.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel26.setBackground(new java.awt.Color(255, 255, 255));
        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel26.setText("From:");

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel27.setText("To:");

        jLabel31.setBackground(new java.awt.Color(255, 255, 255));
        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel31.setText("Item name:");

        btnReportReduction.setBackground(new java.awt.Color(169, 75, 1));
        btnReportReduction.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReportReduction.setForeground(new java.awt.Color(255, 255, 255));
        btnReportReduction.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnReportReduction.setText("Generate Report");
        btnReportReduction.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReportReduction.setOpaque(true);
        btnReportReduction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReportReductionMouseClicked(evt);
            }
        });

        tblReduction.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblReduction.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Pencils", "120", "Mistaken", "pcs"},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Item name", "Date", "Quantity", "Status", "Person"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblReduction.setRowHeight(18);
        jScrollPane5.setViewportView(tblReduction);
        if (tblReduction.getColumnModel().getColumnCount() > 0) {
            tblReduction.getColumnModel().getColumn(2).setMaxWidth(50);
            tblReduction.getColumnModel().getColumn(3).setMaxWidth(60);
            tblReduction.getColumnModel().getColumn(3).setHeaderValue("Status");
        }

        searchreduction.setBackground(new java.awt.Color(169, 75, 1));
        searchreduction.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchreduction.setForeground(new java.awt.Color(255, 255, 255));
        searchreduction.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchreduction.setText("SEARCH");
        searchreduction.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchreduction.setOpaque(true);
        searchreduction.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchreductionMouseClicked(evt);
            }
        });

        jLabel56.setBackground(new java.awt.Color(255, 255, 255));
        jLabel56.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel56.setText("Status:");

        redS.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel57.setBackground(new java.awt.Color(255, 255, 255));
        jLabel57.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel57.setText("Person:");

        redPerson.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        searchreduction1.setBackground(new java.awt.Color(169, 75, 1));
        searchreduction1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchreduction1.setForeground(new java.awt.Color(255, 255, 255));
        searchreduction1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchreduction1.setText("CLEAR");
        searchreduction1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchreduction1.setOpaque(true);
        searchreduction1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchreduction1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31)
                            .addComponent(jLabel26)
                            .addComponent(jLabel56))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(redS, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel57)
                                .addGap(18, 18, 18)
                                .addComponent(redPerson))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(reddateF, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reddateT, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                            .addComponent(redname))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnReportReduction, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchreduction, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchreduction1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(107, 107, 107)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnReportReduction, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchreduction, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(searchreduction1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reddateF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reddateT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(redname, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(redS, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(redPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Item Reduction", jPanel3);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        reddateF1.setBackground(new java.awt.Color(255, 255, 255));
        reddateF1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        reddateT1.setBackground(new java.awt.Color(255, 255, 255));
        reddateT1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel34.setBackground(new java.awt.Color(255, 255, 255));
        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel34.setText("From:");

        jLabel35.setBackground(new java.awt.Color(255, 255, 255));
        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel35.setText("To:");

        jLabel36.setBackground(new java.awt.Color(255, 255, 255));
        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel36.setText("Item name:");

        btnReportReduction1.setBackground(new java.awt.Color(169, 75, 1));
        btnReportReduction1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReportReduction1.setForeground(new java.awt.Color(255, 255, 255));
        btnReportReduction1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnReportReduction1.setText("Generate Report");
        btnReportReduction1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReportReduction1.setOpaque(true);
        btnReportReduction1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReportReduction1MouseClicked(evt);
            }
        });

        tableAdditionRe.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tableAdditionRe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Pencils", "120", "pcs"},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item name", "Date", "Quantity", "Person"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableAdditionRe.setRowHeight(18);
        jScrollPane6.setViewportView(tableAdditionRe);
        if (tableAdditionRe.getColumnModel().getColumnCount() > 0) {
            tableAdditionRe.getColumnModel().getColumn(3).setHeaderValue("Person");
        }

        searchreduction2.setBackground(new java.awt.Color(169, 75, 1));
        searchreduction2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchreduction2.setForeground(new java.awt.Color(255, 255, 255));
        searchreduction2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchreduction2.setText("SEARCH");
        searchreduction2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchreduction2.setOpaque(true);
        searchreduction2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchreduction2MouseClicked(evt);
            }
        });

        jLabel59.setBackground(new java.awt.Color(255, 255, 255));
        jLabel59.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel59.setText("Person:");

        redPerson1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        searchreduction3.setBackground(new java.awt.Color(169, 75, 1));
        searchreduction3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchreduction3.setForeground(new java.awt.Color(255, 255, 255));
        searchreduction3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchreduction3.setText("CLEAR");
        searchreduction3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchreduction3.setOpaque(true);
        searchreduction3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchreduction3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addComponent(jLabel34)
                            .addComponent(jLabel59))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(reddateF1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reddateT1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                            .addComponent(redname1)
                            .addComponent(redPerson1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnReportReduction1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchreduction2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchreduction3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(107, 107, 107)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(btnReportReduction1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchreduction2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(searchreduction3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reddateF1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reddateT1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(redname1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(redPerson1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Item Addition", jPanel8);

        logsR.setBackground(new java.awt.Color(255, 255, 255));

        jLabel37.setBackground(new java.awt.Color(255, 255, 255));
        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel37.setText("From:");

        logdateF.setBackground(new java.awt.Color(255, 255, 255));
        logdateF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel38.setBackground(new java.awt.Color(255, 255, 255));
        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel38.setText("To:");

        logdateT.setBackground(new java.awt.Color(255, 255, 255));
        logdateT.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnReportReduction2.setBackground(new java.awt.Color(169, 75, 1));
        btnReportReduction2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReportReduction2.setForeground(new java.awt.Color(255, 255, 255));
        btnReportReduction2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnReportReduction2.setText("Generate Report");
        btnReportReduction2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReportReduction2.setOpaque(true);
        btnReportReduction2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReportReduction2MouseClicked(evt);
            }
        });

        searchreduction4.setBackground(new java.awt.Color(169, 75, 1));
        searchreduction4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchreduction4.setForeground(new java.awt.Color(255, 255, 255));
        searchreduction4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchreduction4.setText("SEARCH");
        searchreduction4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchreduction4.setOpaque(true);
        searchreduction4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchreduction4MouseClicked(evt);
            }
        });

        searchreduction5.setBackground(new java.awt.Color(169, 75, 1));
        searchreduction5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchreduction5.setForeground(new java.awt.Color(255, 255, 255));
        searchreduction5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchreduction5.setText("CLEAR");
        searchreduction5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchreduction5.setOpaque(true);
        searchreduction5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchreduction5MouseClicked(evt);
            }
        });

        tablelog.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tablelog.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Pencils", "120"},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "User Name", "Time", "Action"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablelog.setRowHeight(18);
        jScrollPane7.setViewportView(tablelog);

        jLabel60.setBackground(new java.awt.Color(255, 255, 255));
        jLabel60.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel60.setText("Person:");

        logperson.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel39.setBackground(new java.awt.Color(255, 255, 255));
        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel39.setText("Action:");

        javax.swing.GroupLayout logsRLayout = new javax.swing.GroupLayout(logsR);
        logsR.setLayout(logsRLayout);
        logsRLayout.setHorizontalGroup(
            logsRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logsRLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(logsRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel39)
                    .addComponent(jLabel60))
                .addGap(18, 18, 18)
                .addGroup(logsRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(logsRLayout.createSequentialGroup()
                        .addComponent(logdateF, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(logdateT, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(logperson)
                    .addComponent(logaction))
                .addGap(298, 298, 298))
            .addGroup(logsRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(logsRLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(logsRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE)
                        .addGroup(logsRLayout.createSequentialGroup()
                            .addComponent(jLabel37)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(logsRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnReportReduction2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchreduction4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchreduction5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(107, 107, 107)))
                    .addContainerGap()))
        );
        logsRLayout.setVerticalGroup(
            logsRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logsRLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(logsRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logdateF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logdateT, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(logsRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logaction, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(logsRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logperson, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(329, Short.MAX_VALUE))
            .addGroup(logsRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(logsRLayout.createSequentialGroup()
                    .addGap(6, 6, 6)
                    .addGroup(logsRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(logsRLayout.createSequentialGroup()
                            .addComponent(btnReportReduction2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(searchreduction4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(7, 7, 7)
                            .addComponent(searchreduction5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                    .addGap(6, 6, 6)))
        );

        jTabbedPane2.addTab("Logs", logsR);

        Reports.add(jTabbedPane2, "card2");

        Body.add(Reports, "card2");

        Settings.setBackground(new java.awt.Color(255, 255, 255));
        Settings.setLayout(new java.awt.CardLayout());

        jTabbedPane3.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Sending address");

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Website Configuration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("From");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("To");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Password");

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("SMTP/ Site");

        WebFrom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        WebTo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        SaveWeb.setBackground(new java.awt.Color(255, 164, 19));
        SaveWeb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SaveWeb.setForeground(new java.awt.Color(255, 255, 255));
        SaveWeb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SaveWeb.setText("Save");
        SaveWeb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SaveWeb.setOpaque(true);
        SaveWeb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SaveWebMouseClicked(evt);
            }
        });

        WebPass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        Website.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        ClearWeb.setBackground(new java.awt.Color(255, 164, 19));
        ClearWeb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ClearWeb.setForeground(new java.awt.Color(255, 255, 255));
        ClearWeb.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ClearWeb.setText("Clear");
        ClearWeb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ClearWeb.setOpaque(true);
        ClearWeb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearWebMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Website, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(WebTo)
                            .addComponent(WebFrom)
                            .addComponent(WebPass))))
                .addGap(15, 15, 15))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(SaveWeb, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ClearWeb, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(WebPass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(WebFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(WebTo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Website, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveWeb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearWeb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GMail Configuration", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("From");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("To");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Password");

        GFrom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        GTo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        ClearGmail.setBackground(new java.awt.Color(255, 164, 19));
        ClearGmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ClearGmail.setForeground(new java.awt.Color(255, 255, 255));
        ClearGmail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ClearGmail.setText("Clear");
        ClearGmail.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ClearGmail.setOpaque(true);
        ClearGmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClearGmailMouseClicked(evt);
            }
        });

        GPass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        SaveGmail.setBackground(new java.awt.Color(255, 164, 19));
        SaveGmail.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SaveGmail.setForeground(new java.awt.Color(255, 255, 255));
        SaveGmail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SaveGmail.setText("Save");
        SaveGmail.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SaveGmail.setOpaque(true);
        SaveGmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SaveGmailMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(SaveGmail, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ClearGmail, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GTo, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                            .addComponent(GFrom)
                            .addComponent(GPass))))
                .addGap(14, 14, 14))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GTo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GPass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ClearGmail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveGmail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ComboEmail.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "GMAIL", "WEB" }));

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Current configuration"));

        areaEmail.setColumns(20);
        areaEmail.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        areaEmail.setRows(5);
        areaEmail.setText("\n");
        jScrollPane11.setViewportView(areaEmail);

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11)
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                .addContainerGap())
        );

        SavePreference.setBackground(new java.awt.Color(255, 164, 19));
        SavePreference.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SavePreference.setForeground(new java.awt.Color(255, 255, 255));
        SavePreference.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SavePreference.setText("Select");
        SavePreference.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SavePreference.setOpaque(true);
        SavePreference.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SavePreferenceMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SavePreference, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ComboEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(SavePreference, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane3.addTab("Email Configuration", jPanel2);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        currentPass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("Current Password");

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText("New Password");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setText("Confirm Password");

        Confirmnew.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Confirmnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmnewActionPerformed(evt);
            }
        });

        Newpass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        viewconfirm.setBackground(new java.awt.Color(255, 255, 255));
        viewconfirm.setBorder(null);
        viewconfirm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Eye_20px.png"))); // NOI18N
        viewconfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewconfirmActionPerformed(evt);
            }
        });

        btnSave3.setBackground(new java.awt.Color(255, 164, 19));
        btnSave3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSave3.setForeground(new java.awt.Color(255, 255, 255));
        btnSave3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnSave3.setText("Update");
        btnSave3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave3.setOpaque(true);
        btnSave3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSave3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currentPass)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(Newpass)
                                .addGap(3, 3, 3)))
                        .addGap(23, 23, 23))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(btnSave3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 211, Short.MAX_VALUE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(Confirmnew)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(viewconfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(168, 168, 168))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentPass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Newpass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Confirmnew, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(viewconfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btnSave3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(196, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Change Password", jPanel9);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        tablenewuser.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tablenewuser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Pencils", "120"},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Username", "Usertype"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablenewuser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablenewuser.setRowHeight(18);
        tablenewuser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablenewuserMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tablenewuser);
        if (tablenewuser.getColumnModel().getColumnCount() > 0) {
            tablenewuser.getColumnModel().getColumn(0).setResizable(false);
            tablenewuser.getColumnModel().getColumn(0).setPreferredWidth(10);
            tablenewuser.getColumnModel().getColumn(1).setResizable(false);
            tablenewuser.getColumnModel().getColumn(1).setPreferredWidth(150);
            tablenewuser.getColumnModel().getColumn(2).setResizable(false);
            tablenewuser.getColumnModel().getColumn(2).setPreferredWidth(30);
        }

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setText("Username");

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setText("User type");

        ComboType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComboType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrator", "User" }));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setLayout(new java.awt.GridLayout(2, 2, 10, 10));

        SaveNewUser.setBackground(new java.awt.Color(255, 164, 19));
        SaveNewUser.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SaveNewUser.setForeground(new java.awt.Color(255, 255, 255));
        SaveNewUser.setText("Save");
        SaveNewUser.setBorderPainted(false);
        SaveNewUser.setContentAreaFilled(false);
        SaveNewUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SaveNewUser.setOpaque(true);
        SaveNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveNewUserActionPerformed(evt);
            }
        });
        jPanel13.add(SaveNewUser);

        SaveNewUser1.setBackground(new java.awt.Color(255, 164, 19));
        SaveNewUser1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SaveNewUser1.setForeground(new java.awt.Color(255, 255, 255));
        SaveNewUser1.setText("Clear Field");
        SaveNewUser1.setBorderPainted(false);
        SaveNewUser1.setContentAreaFilled(false);
        SaveNewUser1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SaveNewUser1.setOpaque(true);
        SaveNewUser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveNewUser1ActionPerformed(evt);
            }
        });
        jPanel13.add(SaveNewUser1);

        DeleteNewUser.setBackground(new java.awt.Color(244, 244, 244));
        DeleteNewUser.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        DeleteNewUser.setForeground(new java.awt.Color(255, 255, 255));
        DeleteNewUser.setText("Delete");
        DeleteNewUser.setBorderPainted(false);
        DeleteNewUser.setContentAreaFilled(false);
        DeleteNewUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeleteNewUser.setEnabled(false);
        DeleteNewUser.setOpaque(true);
        DeleteNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteNewUserActionPerformed(evt);
            }
        });
        jPanel13.add(DeleteNewUser);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboType, 0, 303, Short.MAX_VALUE)
                            .addComponent(UserNamenew))
                        .addGap(15, 15, 15))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(UserNamenew, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane3.addTab("Manage Users", jPanel10);

        Settings.add(jTabbedPane3, "card2");

        Body.add(Settings, "card5");

        getContentPane().add(Body, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ConfirmnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmnewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConfirmnewActionPerformed

    private void txtSearchStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchStockActionPerformed

    private void txtSearchItemsCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtSearchItemsCaretUpdate
        // TODO add your handling code here:
        if(!"".equals(txtSearchItems.getText()) && !"Search By Item Name".equals(txtSearchItems.getText())){
            FillTable(tableItem,"SELECT `Id`, `Iname`, quantity from items "
                + " WHERE Iname LIKE '%" + txtSearchItems.getText() + "%' ");
        }

    }//GEN-LAST:event_txtSearchItemsCaretUpdate
String ItemID = "";
    private void btnSItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSItemActionPerformed
        // TODO add your handling code here:
         try {
          Connection con = DBConnect.connect();
        
            String sql = "INSERT INTO `items`(`Iname`, `quantity`,unit,perunit,low ) VALUES (?,?,?,?,?)";
            // java.sql.Date date1 = new java.sql.Date(FromEv.getDate().getTime());
            //java.sql.Date date2 = new java.sql.Date(ToEv.getDate().getTime());
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.ps.setString(1, txtNameItem.getText());
            DBConnect.ps.setInt(2, 0);
             DBConnect.ps.setString(3, txtUnitItem.getText());
             DBConnect.ps.setInt(4, Integer.parseInt(txtCountItem.getText()));
              DBConnect.ps.setInt(5, Integer.parseInt(txtLowItem.getText()));
            DBConnect.ps.execute();
            JOptionPane.showMessageDialog(null, "NEW RECORD SAVED");
             con.close();
             FillTable(tableItem,"SELECT `Id`, `Iname`, quantity from items");
        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnSItemActionPerformed

    private void btnCItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCItemActionPerformed
        // TODO add your handling code here:
        txtNameItem.setText("");
        txtSearchItems.setText("");
        txtUnitItem.setText("");
        txtCountItem.setText("");
        txtLowItem.setText("");
        ItemID = "";
        btnSItem.setEnabled(true);
          btnSItem.setBackground(new Color(255,164,19));
         btnUItem.setBackground(new Color(244, 244, 244));
         btnDItem.setBackground(new Color(244, 244, 244));
        btnUItem.setEnabled(false);
        btnDItem.setEnabled(false);
    }//GEN-LAST:event_btnCItemActionPerformed

    private void tableItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableItemMouseClicked
        // TODO add your handling code here:
           int selectedRow = tableItem.getSelectedRow();
        String hid = tableItem.getValueAt(selectedRow, 0).toString();
        try {
           Connection con = DBConnect.connect();
            String sql = "select * FROM items WHERE id = ?";
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.ps.setString(1,hid);
            DBConnect.rs = DBConnect.ps.executeQuery();
            if(DBConnect.rs.next()) {
                 txtNameItem.setText(DBConnect.rs.getString(2));
        txtUnitItem.setText(DBConnect.rs.getString(4));
        txtCountItem.setText(DBConnect.rs.getString(5));
        txtLowItem.setText(DBConnect.rs.getString(6)); 
            }
            con.close();
            btnSItem.setEnabled(false);
              btnSItem.setBackground(new Color(244, 244, 244));
         btnUItem.setBackground(new Color(255,164,19));
         btnDItem.setBackground(new Color(255,164,19));
             btnUItem.setEnabled(true);
            btnDItem.setEnabled(true);

        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
        ItemID = hid;
    }//GEN-LAST:event_tableItemMouseClicked
public static class MyRunnable implements Runnable {
 static int count = 0;

        public MyRunnable() {
        }
    @Override
    public void run() {
     try {
         //run code     
         Thread.sleep(5000);
         Menu m = new Menu();
         m.sendEmail();
         //24 hour sleep
     } catch (InterruptedException ex) {
         Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
     }
        
    }
    }
    private void btnUItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUItemActionPerformed
        // TODO add your handling code here:
         if("".equals(ItemID))
        {
            JOptionPane.showMessageDialog(null, "ID NEEDED. CLICK RECORD FROM TABLE");
        }
        else
        {

            try {
                 Connection con = DBConnect.connect();
                String query = "UPDATE `items` SET `Iname` = ?,unit = ?,perunit = ?,low = ? where id = ?";
               DBConnect.ps = con.prepareStatement(query);
                  DBConnect.ps.setString(1, txtNameItem.getText());
             DBConnect.ps.setString(2, txtUnitItem.getText());
             DBConnect.ps.setInt(3, Integer.parseInt(txtCountItem.getText()));
              DBConnect.ps.setInt(4, Integer.parseInt(txtLowItem.getText()));
               DBConnect.ps.setInt(5, Integer.parseInt(ItemID));
                DBConnect.ps.executeUpdate();
                JOptionPane.showMessageDialog(null,"RECORD UPDATED SUCCESSFULLY");
                con.close();
                FillTable(tableItem,"SELECT `Id`, `Iname`, quantity from items");
            }
            catch (SQLException ex ) {
                JOptionPane.showMessageDialog(null, ex);

            }}
    }//GEN-LAST:event_btnUItemActionPerformed

    private void btnDItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDItemActionPerformed
        // TODO add your handling code here:
         if(!"".equals(ItemID)){
           try {
              
            Connection con = DBConnect.connect();
            String query = "DELETE FROM items WHERE id = ?";
            DBConnect.ps = con.prepareStatement(query);
            DBConnect.ps.setInt  (1, Integer.parseInt(ItemID));
            DBConnect.ps.executeUpdate();
            con.close();
            JOptionPane.showMessageDialog(null, "Record Deleted");
            FillTable(tableItem,"SELECT `Id`, `Iname`, quantity from items");
        } catch (SQLException e ) {
            if(e.getErrorCode() == 1451)
            JOptionPane.showMessageDialog(null, "You cannot delete this field it has dependancies");
            else
               JOptionPane.showMessageDialog(null, e); 
            // System.out.println(e.getErrorCode());
        }
        txtNameItem.setText("");
        txtSearchItems.setText("");
        txtUnitItem.setText("");
        txtCountItem.setText("");
        txtLowItem.setText("");
        btnSItem.setBackground(new Color(255,164,19));
         btnUItem.setBackground(new Color(244, 244, 244));
         btnDItem.setBackground(new Color(244, 244, 244));
          btnSItem.setEnabled(true);
             btnUItem.setEnabled(false);
            btnDItem.setEnabled(false);
        ItemID = "";
         }
         else
             JOptionPane.showMessageDialog(null, "ID NEEDED. CLICK RECORD FROM TABLE");
    }//GEN-LAST:event_btnDItemActionPerformed

    private void btnSItemAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSItemAddActionPerformed
        // TODO add your handling code here:
        if(!"".equals(ItemidAdd.getText()))
        {
            //save to shipment
               try {
          Connection con = DBConnect.connect();
        
            String sql = "INSERT INTO `shipment`(`shipdate`, `itemid`, `quantity`, `userid`) VALUES (?,?,?,?)";
            java.sql.Date date1 = new java.sql.Date(dateItemAdd.getDate().getTime());
            //java.sql.Date date2 = new java.sql.Date(ToEv.getDate().getTime());
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.ps.setDate(1, date1);
            DBConnect.ps.setInt(2, Integer.parseInt(ItemidAdd.getText()));
             DBConnect.ps.setInt(3, Integer.parseInt(ItemQuanAdd.getText()));
              DBConnect.ps.setInt(4, Integer.parseInt(permuid));
            DBConnect.ps.execute();
             con.close();
            
 FillTable(tblAddition,"SELECT shipment.id,shipment.itemid, `Iname`, shipment.quantity from shipment INNER JOIN items on shipment.itemid = items.id where status = 0");        } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
            //refresh table
        }
    }//GEN-LAST:event_btnSItemAddActionPerformed

    private void btnRemoveAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAddActionPerformed
        // TODO add your handling code here:
        //delete
           //refresh table
            int row = tblAddition.getSelectedRow();
           if(row >= 0){
            try {
                  Connection con = DBConnect.connect();
            String query = "DELETE FROM shipment WHERE id = ?";
            DBConnect.ps = con.prepareStatement(query);
            DBConnect.ps.setString(1, tblAddition.getModel().getValueAt(row, 0).toString());
             DBConnect.ps.execute();
            con.close();
 FillTable(tblAddition,"SELECT shipment.id,shipment.itemid, `Iname`, shipment.quantity from shipment INNER JOIN items on shipment.itemid = items.id where status = 0");      
            } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
           }
           else
                JOptionPane.showMessageDialog(null,"PLEASE SELECT A ROW FIRST"); 
    }//GEN-LAST:event_btnRemoveAddActionPerformed

    private void btnStockSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStockSActionPerformed
        // TODO add your handling code here:
        //update item quantity
        //change status in shipment
        //refresh table
          DefaultTableModel tableModel=(DefaultTableModel) tblAddition.getModel();
if(tableModel.getRowCount() > 0){
    
        try {
            for(int i = 0; i < tblAddition.getRowCount(); i++)
            {
               Connection con = DBConnect.connect();
                String query = "UPDATE `items` SET quantity = quantity + ? where id = ?";
               DBConnect.ps = con.prepareStatement(query);
                DBConnect.ps.setInt      (1, Integer.parseInt(tableModel.getValueAt(i, 3).toString()));
               DBConnect.ps.setInt      (2,Integer.parseInt(tableModel.getValueAt(i, 1).toString()));
                DBConnect.ps.executeUpdate();
                con.close();
            }
                    try {
           Connection con = DBConnect.connect();
            String query = "UPDATE shipment SET STATUS = 1";
              DBConnect.ps = con.prepareStatement(query);
            DBConnect.ps.executeUpdate();
            con.close();
        }
        catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
        }
        catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
        JOptionPane.showMessageDialog(null,"SENT SUCCESSFULLY");
           FillTable(tableItem,"SELECT `Id`, `Iname`, quantity from items");
      FillTable(tblAddition,"SELECT shipment.id,shipment.itemid, `Iname`, shipment.quantity from shipment INNER JOIN items on shipment.itemid = items.id where status = 0");      
}
else
  JOptionPane.showMessageDialog(null, "TABLE EMPTY, ADD ITEMS FIRST");
    }//GEN-LAST:event_btnStockSActionPerformed

    private void jLabel54MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel54MouseClicked
        // TODO add your handling code here:
        DialogSearchItemAdd.setVisible(true);
        FillTable(tableItemAddS,"SELECT `Id`, `Iname` from items");
        DialogSearchItemAdd.pack();
        CenteredDialog(DialogSearchItemAdd);
        
    }//GEN-LAST:event_jLabel54MouseClicked

       public void CenteredDialog(javax.swing.JDialog objFrame)
{
        Dimension objDimension = Toolkit.getDefaultToolkit().getScreenSize();
        int iCoordX = (objDimension.width - objFrame.getWidth()) / 2;
        int iCoordY = (objDimension.height - objFrame.getHeight()) / 2;
        objFrame.setLocation(iCoordX, iCoordY); 
}    
    
    private void txtSearchItemAddCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtSearchItemAddCaretUpdate
        // TODO add your handling code here:
       FillTable(tableItemAddS,"SELECT `Id`, `Iname`, quantity from items "
                + " WHERE Iname LIKE '%" + txtSearchItemAdd.getText() + "%' ");

    }//GEN-LAST:event_txtSearchItemAddCaretUpdate

    private void tableItemAddSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableItemAddSMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tableItemAddSMouseClicked

    private void btnSItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSItem4ActionPerformed
        // TODO add your handling code here:
                int selectedRow = tableItemAddS.getSelectedRow();
        String hid = tableItemAddS.getValueAt(selectedRow, 0).toString();
        try {
            Connection con = DBConnect.connect();
            String sql = "select * FROM items WHERE id = ?";
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.ps.setString(1,hid);
            DBConnect.rs = DBConnect.ps.executeQuery();
            if(DBConnect.rs.next()) {
                ItemidAdd.setText(DBConnect.rs.getString(1));
                ItemNameAdd.setText(DBConnect.rs.getString(2));
            }
            con.close();
            DialogSearchItemAdd.dispose();
        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_btnSItem4ActionPerformed

    private void btnSItemRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSItemRemoveActionPerformed
        // TODO add your handling code here:
        if(!"".equals(ItemidRemove.getText()))
        {
            //save to shipment
               try {
          Connection con = DBConnect.connect();
        
            String sql = "INSERT INTO `removal`(`removedate`, `itemid`, `quantity`, `userid`,status) VALUES (?,?,?,?,?)";
            java.sql.Date date1 = new java.sql.Date(dateItemRemove.getDate().getTime());
            //java.sql.Date date2 = new java.sql.Date(ToEv.getDate().getTime());
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.ps.setDate(1, date1);
            DBConnect.ps.setInt(2, Integer.parseInt(ItemidRemove.getText()));
             DBConnect.ps.setInt(3, Integer.parseInt(ItemQuanRemove.getText()));
              DBConnect.ps.setInt(4, Integer.parseInt(permuid));
            DBConnect.ps.setString(5, ComboRemove.getSelectedItem().toString());
            DBConnect.ps.execute();
             con.close();
 FillTable(tblRemoval,"SELECT removal.id,removal.itemid, `Iname`, removal.quantity,status from removal INNER JOIN items on removal.itemid = items.id where isRemoved = 0");   
               } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
            //refresh table
        }
    }//GEN-LAST:event_btnSItemRemoveActionPerformed

    private void btnStockRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStockRemoveActionPerformed
        // TODO add your handling code here:
         //update item quantity
        //change status in shipment
        //refresh table
  
         //update item quantity
        //change status in shipment
        //refresh table
          DefaultTableModel tableModel=(DefaultTableModel) tblRemoval.getModel();
if(tableModel.getRowCount() > 0){
    
        try {
            for(int i = 0; i < tblRemoval.getRowCount(); i++)
            {
               Connection con = DBConnect.connect();
                String query = "UPDATE `items` SET quantity = quantity - ? where id = ?";
               DBConnect.ps = con.prepareStatement(query);
                DBConnect.ps.setInt      (1, Integer.parseInt(tableModel.getValueAt(i, 3).toString()));
               DBConnect.ps.setInt      (2,Integer.parseInt(tableModel.getValueAt(i, 1).toString()));
                DBConnect.ps.executeUpdate();
                con.close();
            }
                    try {
           Connection con = DBConnect.connect();
            String query = "UPDATE removal SET isRemoved = 1";
              DBConnect.ps = con.prepareStatement(query);
            DBConnect.ps.executeUpdate();
            con.close();
        }
        catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
        }
        catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
        JOptionPane.showMessageDialog(null,"SENT SUCCESSFULLY");
        setEmailThread();
           FillTable(tableItem,"SELECT `Id`, `Iname`, quantity from items");
      FillTable(tblRemoval,"SELECT removal.id,removal.itemid, `Iname`, removal.quantity,status from removal INNER JOIN items on removal.itemid = items.id where isRemoved = 0");
}
    else
  JOptionPane.showMessageDialog(null, "TABLE EMPTY, ADD ITEMS FIRST");     
    }//GEN-LAST:event_btnStockRemoveActionPerformed

    private void btnRemoveRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveRemoveActionPerformed
        // TODO add your handling code here:
         int row = tblRemoval.getSelectedRow();
           if(row >= 0){
            try {
                  Connection con = DBConnect.connect();
            String query = "DELETE FROM removal WHERE id = ?";
            DBConnect.ps = con.prepareStatement(query);
            DBConnect.ps.setString(1, tblRemoval.getModel().getValueAt(row, 0).toString());
             DBConnect.ps.execute();
            con.close();
 FillTable(tblRemoval,"SELECT removal.id,removal.itemid, `Iname`, removal.quantity,status from removal INNER JOIN items on removal.itemid = items.id where isRemoved = 0");
            } catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
           }
           else
                JOptionPane.showMessageDialog(null,"PLEASE SELECT A ROW FIRST"); 
    }//GEN-LAST:event_btnRemoveRemoveActionPerformed

    private void txtSearchItemRemoveCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtSearchItemRemoveCaretUpdate
        // TODO add your handling code here:
           FillTable(tableItemRemove,"SELECT `Id`, `Iname`, quantity from items "
                + " WHERE Iname LIKE '%" + txtSearchItemRemove.getText() + "%' ");
        
    }//GEN-LAST:event_txtSearchItemRemoveCaretUpdate

    private void tableItemRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableItemRemoveMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableItemRemoveMouseClicked

    private void btnSItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSItem5ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableItemRemove.getSelectedRow();
        String hid = tableItemRemove.getValueAt(selectedRow, 0).toString();
        try {
            Connection con = DBConnect.connect();
            String sql = "select * FROM items WHERE id = ?";
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.ps.setString(1,hid);
            DBConnect.rs = DBConnect.ps.executeQuery();
            if(DBConnect.rs.next()) {
                ItemidRemove.setText(DBConnect.rs.getString(1));
                NameRemove.setText(DBConnect.rs.getString(2));
            }
            con.close();
            DialogSearchItemRemove.dispose();
        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_btnSItem5ActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
          DialogSearchItemRemove.setVisible(true);
        FillTable(tableItemRemove,"SELECT `Id`, `Iname` from items");
        DialogSearchItemRemove.pack();
        CenteredDialog(DialogSearchItemRemove);
    }//GEN-LAST:event_jLabel10MouseClicked

    private void btnReportStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportStockMouseClicked
        try {
            DefaultTableModel tableModel=(DefaultTableModel) tblStock.getModel();
            Map params = new HashMap();
            JRDataSource dataSource = new JRTableModelDataSource(tableModel);
            JasperPrint print = JasperFillManager.fillReport("src/reports/report1.jasper", params, dataSource);
            JasperViewer.viewReport(print, true); // true == Exit on Close
        } catch (JRException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReportStockMouseClicked

    private void txtSearchStockCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtSearchStockCaretUpdate
        // TODO add your handling code here:
         FillTable(tblStock,"SELECT `Iname`, quantity,Unit,Perunit from items "
                + " WHERE Iname LIKE '%" + txtSearchStock.getText() + "%' ");
    }//GEN-LAST:event_txtSearchStockCaretUpdate

    private void SaveNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveNewUserActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Connection con = DBConnect.connect();
            String sql = "INSERT INTO `user`(`type`, `username`,password ) VALUES (?,?,?)";
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.ps.setString(1, ComboType.getSelectedItem().toString());
            DBConnect.ps.setString(2, UserNamenew.getText());
            DBConnect.ps.setString(3, "1234");
            DBConnect.ps.execute();
             sql = "INSERT INTO `logs`(`userid`, `action` ) VALUES (?,?)";
            DBConnect.ps = con.prepareStatement(sql);
             DBConnect.ps.setInt(1, Integer.parseInt(permuid));
              DBConnect.ps.setString(2, "Added User " + UserNamenew.getText());
            DBConnect.ps.execute();
             FillTable(tablenewuser,"SELECT `Id`, `username`, type from user where id != " +Integer.parseInt(permuid)+"");
              FillTable(tablelog,"SELECT username,time,action from logs INNER JOIN user on logs.userid = user.id ");
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SaveNewUserActionPerformed

    private void tablenewuserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablenewuserMouseClicked
        // TODO add your handling code here:
         int selectedRow = tablenewuser.getSelectedRow();
        String hid = tablenewuser.getValueAt(selectedRow, 0).toString();
        try {
           Connection con = DBConnect.connect();
            String sql = "select * FROM user WHERE id = ?";
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.ps.setString(1,hid);
            DBConnect.rs = DBConnect.ps.executeQuery();
            if(DBConnect.rs.next()) {   
                 ComboType.setSelectedItem(DBConnect.rs.getString(2));
                   UserNamenew.setText(DBConnect.rs.getString(3));
            }
            con.close();
            DeleteNewUser.setEnabled(true);
            SaveNewUser.setEnabled(false);
            SaveNewUser.setBackground(new Color(244, 244, 244));
             DeleteNewUser.setBackground(new Color(219,79,17));

        } catch (SQLException ex ) {
            JOptionPane.showMessageDialog(null, ex);

        }
    }//GEN-LAST:event_tablenewuserMouseClicked

    private void DeleteNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteNewUserActionPerformed
        // TODO add your handling code here:
           try {
               int row = tablenewuser.getSelectedRow();    
            Connection con = DBConnect.connect();
            String query = "DELETE FROM user WHERE id = ?";
            DBConnect.ps = con.prepareStatement(query);
            DBConnect.ps.setString(1, tablenewuser.getModel().getValueAt(row, 0).toString());
            DBConnect.ps.executeUpdate();
              String sql = "INSERT INTO `logs`(`userid`, `action` ) VALUES (?,?)";
            DBConnect.ps = con.prepareStatement(sql);
             DBConnect.ps.setInt(1, Integer.parseInt(permuid));
              DBConnect.ps.setString(2, "Deleted User " +tablenewuser.getModel().getValueAt(row, 1).toString());
            DBConnect.ps.execute();
            con.close();
            JOptionPane.showMessageDialog(null, "Record Deleted");
          FillTable(tablenewuser,"SELECT `Id`, `username`, type from user where id != " +Integer.parseInt(permuid)+"");
           FillTable(tablelog,"SELECT username,time,action from logs INNER JOIN user on logs.userid = user.id ");
            UserNamenew.setText("");
            DeleteNewUser.setEnabled(false);
            SaveNewUser.setEnabled(true);
            DeleteNewUser.setBackground(new Color(244, 244, 244));
             SaveNewUser.setBackground(new Color(255,164,19));
        } catch (SQLException e ) {
            if(e.getErrorCode() == 1451)
            JOptionPane.showMessageDialog(null, "You cannot delete this field it has dependancies");
            else
               JOptionPane.showMessageDialog(null, e); 
            // System.out.println(e.getErrorCode());
        }  
    }//GEN-LAST:event_DeleteNewUserActionPerformed

    private void SaveNewUser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveNewUser1ActionPerformed
        // TODO add your handling code here:
         UserNamenew.setText("");
            DeleteNewUser.setEnabled(false);
            SaveNewUser.setEnabled(true);
            DeleteNewUser.setBackground(new Color(244, 244, 244));
             SaveNewUser.setBackground(new Color(255,164,19));
    }//GEN-LAST:event_SaveNewUser1ActionPerformed

    private void viewconfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewconfirmActionPerformed
        // TODO add your handling code here:
 if (viewconfirm.isSelected())
        Confirmnew.setEchoChar((char)0);
        else
        Confirmnew.setEchoChar('\u25CF');
    }//GEN-LAST:event_viewconfirmActionPerformed

    private void ClearGmailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearGmailMouseClicked
        // TODO add your handling code here:
       GFrom.setText("");
       GTo.setText("");
       GPass.setText("");
    }//GEN-LAST:event_ClearGmailMouseClicked

    private void SavePreferenceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SavePreferenceMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Connection con = DBConnect.connect();
            String query = "UPDATE`emailconfig` SET pref = ?";
               DBConnect.ps = con.prepareStatement(query);
                DBConnect.ps.setString(1, ComboEmail.getSelectedItem().toString());
                DBConnect.ps.executeUpdate();
                con.close();
            loadCurrentEmail();
            JOptionPane.showMessageDialog(null, "Success");
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SavePreferenceMouseClicked

    private void SaveGmailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveGmailMouseClicked
        // TODO add your handling code here:
        if(GFrom.getText() == null ? GTo.getText() != null : !GFrom.getText().equals(GTo.getText())){
           try {
            // TODO add your handling code here:
            Connection con = DBConnect.connect();
            String query = "UPDATE`emailconfig` SET `fromid` = ?, `toid` = ?, `password` = ? where type = 'GMAIL'";
               DBConnect.ps = con.prepareStatement(query);
                DBConnect.ps.setString(1, GFrom.getText());
               DBConnect.ps.setString     (2,GTo.getText());
                DBConnect.ps.setString     (3,GPass.getText());
                DBConnect.ps.executeUpdate();
                con.close();
            loadCurrentEmail();
              JOptionPane.showMessageDialog(null, "Success");
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else
          JOptionPane.showMessageDialog(null, "FAILURE: EMPTY FIELDS OR FROM AND TO ARE EQUAL");   
    }//GEN-LAST:event_SaveGmailMouseClicked

    private void SaveWebMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveWebMouseClicked
      if(WebFrom.getText() == null ? WebTo.getText() != null : !WebFrom.getText().equals(WebTo.getText())){
        try {
            // TODO add your handling code here:
            Connection con = DBConnect.connect();
            String query = "UPDATE`emailconfig` SET `fromid` = ?, `toid` = ?, `password` = ?,port=?,smtp=? where type = 'WEB'";
               DBConnect.ps = con.prepareStatement(query);
                DBConnect.ps.setString(1, WebFrom.getText());
               DBConnect.ps.setString     (2,WebTo.getText());
                DBConnect.ps.setString     (3,WebPass.getText());
                DBConnect.ps.setString     (4,"0000");
                DBConnect.ps.setString     (5,Website.getText());
                DBConnect.ps.executeUpdate();
                con.close();
            loadCurrentEmail();
              JOptionPane.showMessageDialog(null, "Success");
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
      }
      else
            JOptionPane.showMessageDialog(null, "FAILURE: EMPTY FIELDS OR FROM AND TO ARE EQUAL");    
    }//GEN-LAST:event_SaveWebMouseClicked

    private void ClearWebMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClearWebMouseClicked
        // TODO add your handling code here:
        WebFrom.setText("");
        WebPass.setText("");
        WebTo.setText("");
        Website.setText("");
    }//GEN-LAST:event_ClearWebMouseClicked

    private void searchreductionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchreductionMouseClicked
        // TODO add your handling code here:
         java.sql.Date date1 = new java.sql.Date(reddateF.getDate().getTime());
           java.sql.Date date2 = new java.sql.Date(reddateT.getDate().getTime());
         FillTable(tblReduction,"SELECT Iname,removedate,removal.quantity,status,username from removal "+
                 "INNER JOIN items on removal.itemid = items.id INNER join user on removal.userid = user.id "
                + " WHERE Iname LIKE '%" + redname.getText() + "%' AND "
                  + " removal.status LIKE '%" + redS.getText() + "%' AND "
          + " username LIKE '%" + redPerson.getText() + "%' AND" 
                   + " removedate BETWEEN '"+date1+ "' AND '" + date2+"'");
        
    }//GEN-LAST:event_searchreductionMouseClicked

    private void searchreduction1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchreduction1MouseClicked
        // TODO add your handling code here:
        redPerson.setText("");
        redS.setText("");
        redname.setText("");
    }//GEN-LAST:event_searchreduction1MouseClicked

    private void btnReportReductionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportReductionMouseClicked
        // TODO add your handling code here:
          try {
            DefaultTableModel tableModel=(DefaultTableModel) tblReduction.getModel();
            Map params = new HashMap();
            JRDataSource dataSource = new JRTableModelDataSource(tableModel);
            JasperPrint print = JasperFillManager.fillReport("src/reports/reduction.jasper", params, dataSource);
            JasperViewer.viewReport(print, false); // true == Exit on Close
        } catch (JRException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReportReductionMouseClicked

    private void btnReportReduction1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportReduction1MouseClicked
        // TODO add your handling code here:
         try {
            DefaultTableModel tableModel=(DefaultTableModel) tableAdditionRe.getModel();
            Map params = new HashMap();
            JRDataSource dataSource = new JRTableModelDataSource(tableModel);
            JasperPrint print = JasperFillManager.fillReport("src/reports/additions.jasper", params, dataSource);
            JasperViewer.viewReport(print, false); // true == Exit on Close
        } catch (JRException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReportReduction1MouseClicked

    private void searchreduction2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchreduction2MouseClicked
        // TODO add your handling code here:
          java.sql.Date date1 = new java.sql.Date(reddateF1.getDate().getTime());
           java.sql.Date date2 = new java.sql.Date(reddateT1.getDate().getTime());
         FillTable(tableAdditionRe,"SELECT Iname,shipdate,shipment.quantity,username from shipment "+
                 "INNER JOIN items on shipment.itemid = items.id INNER join user on shipment.userid = user.id "
                + " WHERE Iname LIKE '%" + redname1.getText() + "%' AND "
          + " username LIKE '%" + redPerson1.getText() + "%' AND" 
                   + " shipdate BETWEEN '"+date1+ "' AND '" + date2+"' AND status = 1");
    }//GEN-LAST:event_searchreduction2MouseClicked

    private void searchreduction3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchreduction3MouseClicked
        // TODO add your handling code here:
        redPerson1.setText("");
        redname1.setText("");
    }//GEN-LAST:event_searchreduction3MouseClicked

    private void btnSave3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSave3MouseClicked
        // TODO add your handling code here:
        ConfirmExistingPass();
    }//GEN-LAST:event_btnSave3MouseClicked

    private void btnReportReduction2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReportReduction2MouseClicked
        // TODO add your handling code here:
          try {
            DefaultTableModel tableModel=(DefaultTableModel) tablelog.getModel();
            Map params = new HashMap();
            JRDataSource dataSource = new JRTableModelDataSource(tableModel);
            JasperPrint print = JasperFillManager.fillReport("src/reports/logs"
                    + ".jasper", params, dataSource);
            JasperViewer.viewReport(print, false); // true == Exit on Close
        } catch (JRException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReportReduction2MouseClicked

    private void searchreduction4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchreduction4MouseClicked
        // TODO add your handling code here:
         java.sql.Date date1 = new java.sql.Date(logdateF.getDate().getTime());
           java.sql.Date date2 = new java.sql.Date(logdateT.getDate().getTime());
         FillTable(tablelog,"SELECT username,time,action from logs "+
                 "INNER JOIN user on logs.userid = user.id "
                + " WHERE username LIKE '%" + logperson.getText() + "%' AND "
          + " action LIKE '%" + logaction.getText() + "%' AND" 
                   + " time BETWEEN '"+date1+ "' AND '" + date2+"'");
                                               
    }//GEN-LAST:event_searchreduction4MouseClicked

    private void searchreduction5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchreduction5MouseClicked
        // TODO add your handling code here:
        logaction.setText("");
        logperson.setText("");
    }//GEN-LAST:event_searchreduction5MouseClicked

    private void btnSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettingsActionPerformed
        // TODO add your handling code here:
          paneltraverse(Body,Settings);
         ChangeColor(Menu, btnSettings);
    }//GEN-LAST:event_btnSettingsActionPerformed

    private void btnReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportsActionPerformed
        // TODO add your handling code here:
          paneltraverse(Body,Reports);
         ChangeColor(Menu, btnReports);
    }//GEN-LAST:event_btnReportsActionPerformed

    private void btnStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStockActionPerformed
        // TODO add your handling code here:
         paneltraverse(Body,Stock);
        ChangeColor(Menu, btnStock);
    }//GEN-LAST:event_btnStockActionPerformed

    private void btnSettings2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettings2ActionPerformed
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:
            this.dispose();
            Login l = new Login();
            l.setVisible(true);
            Connection con = DBConnect.connect();
            String sql = "INSERT INTO `logs`(`userid`, `action` ) VALUES (?,?)";
            DBConnect.ps = con.prepareStatement(sql);
            DBConnect.ps.setInt(1, Integer.parseInt(permuid));
            DBConnect.ps.setString(2, "Logged Out");
            DBConnect.ps.execute();
           
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSettings2ActionPerformed

    private void btnInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventoryActionPerformed
        // TODO add your handling code here:
        paneltraverse(Body,Inventory);
        ChangeColor(Menu, btnInventory);
    }//GEN-LAST:event_btnInventoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
            }
        });
        
    }
    final void setEmailThread(){
     MyRunnable myRunnable = new MyRunnable();
        Thread t = new Thread(myRunnable);
        t.start();
    }
    public final void loadCurrentEmail(){
         try{
             Connection con = DBConnect.connect();
            DBConnect.ps = con.prepareStatement("SELECT * FROM emailconfig WHERE type = pref");
             DBConnect.rs =  DBConnect.ps.executeQuery();
                if( DBConnect.rs.next()){
                    areaEmail.setText("");
                    if("GMAIL".equals(DBConnect.rs.getString(8))){
             
                  areaEmail.append("Current Email Settings: \n");
                  areaEmail.append("Active type: " + DBConnect.rs.getString(8) + "\n" );
                   areaEmail.append("Email From: " + DBConnect.rs.getString(3) + "\n" );
                    areaEmail.append("Email To: " + DBConnect.rs.getString(4) + "\n" );
                     areaEmail.append("Email password: " + DBConnect.rs.getString(5) + "\n" );
                          areaEmail.append("For Gmail you need to turn on the 'less secure app' setting\n" +
"and also turn off 2 step authentication in your Gmail Account");
                    }
                    else
                    {
                       
                  areaEmail.append("Current Email Settings: \n");
                  areaEmail.append("Active type: " + DBConnect.rs.getString(8) + "\n" );
                   areaEmail.append("Email From: " + DBConnect.rs.getString(3) + "\n" );
                    areaEmail.append("Email To: " + DBConnect.rs.getString(4) + "\n" );
                     areaEmail.append("Email password: " + DBConnect.rs.getString(5) + "\n" );
                      //areaEmail.append("Email port: " + DBConnect.rs.getString(6) + "\n" );
                       areaEmail.append("Email website: " + DBConnect.rs.getString(7) + "\n" );
                        areaEmail.append("For Gmail you need to turn on the 'less secure app' setting\n" +
"and also turn off 2 step authentication in your Gmail Account");
                    }
            }
        con.close();
       } 
      catch (SQLException ex) {
          JOptionPane.showMessageDialog(null, ex);
           
        }
    }
    public void ConfirmExistingPass(){
        try{
             Connection con = DBConnect.connect();
            DBConnect.ps = con.prepareStatement("SELECT * FROM user WHERE id = ? and password = ?");
             DBConnect.ps.setInt(1, Integer.parseInt(permuid));
             DBConnect.ps.setString(2,currentPass.getText());
             DBConnect.rs =  DBConnect.ps.executeQuery();
            if(currentPass.getText().length()>0){
                if( DBConnect.rs.next()){
                    ChangePass();
                                  }
                else{
                JOptionPane.showMessageDialog(null,"CURRENT PASS IS INCORRECT!");
                }}
            else
            {
                JOptionPane.showMessageDialog(null,"CURRENT PASS IS EMPTY! PLEASE FILL IN THE DETAILS");
            }
        con.close();
       } 
      catch (SQLException ex) {
          JOptionPane.showMessageDialog(null, ex);
           
        }
     }
       
    void ChangePass()
{
     try{
                   Connection con = DBConnect.connect();
            String query = "update user set password = ? where id = ?";
      DBConnect.ps = con.prepareStatement(query);
      
      if(Confirmnew.getText().length()>0 || Newpass.getText().length()>0)
      {
      if(Newpass.getText() == null ? Confirmnew.getText() == null : Newpass.getText().equals(Confirmnew.getText()))
      {
           DBConnect.ps.setString   (1,Confirmnew.getText());
         DBConnect.ps.setInt(2, Integer.parseInt(permuid));
         
        DBConnect.ps.executeUpdate();
      JOptionPane.showMessageDialog(null,"PASSWORD SUCCESFULLY CHANGED");
      }
      else
      {
          JOptionPane.showMessageDialog(null,"PASSWORDS DO NOT MATCH");
      }
      }
      else
      {
          JOptionPane.showMessageDialog(null,"EMPTY FIELDS DETECTED! PLEASE FILL IN THE DETAILS");
      }
       con.close();
            }   
    
      catch (SQLException ex) {
          JOptionPane.showMessageDialog(null, ex);
            
        }
}

    public final void  paneltraverse(Container parent, JPanel F)
{
  //  Component component = null; // Stores a Component

//Container myContainer;
//myContainer = parent.getContentPane();
Component myCA[] = parent.getComponents();

        for (Component myCA1 : myCA) 
        {
            if (myCA1 instanceof JPanel) {
                JPanel tempTf = (JPanel) myCA1;
                if(tempTf == F)
                {
                   F.setVisible(true);
                }
                else 
                {
                    tempTf.setVisible(false);
                }
            }
        }
}
 public final void FillTable(JTable table, String Query)
{
    try
    {
       Connection con = DBConnect.connect();
       DBConnect.ps = con.prepareStatement(Query);
      DBConnect.rs =  DBConnect.ps.executeQuery();
         
        //To remove previously added rows
        while(table.getRowCount() > 0) 
        {
            ((DefaultTableModel) table.getModel()).removeRow(0);
        }
        int columns =  DBConnect.rs.getMetaData().getColumnCount();
        while( DBConnect.rs.next())
        {  
            Object[] row = new Object[columns];
            for (int i = 1; i <= columns; i++)
            {  
                row[i - 1] =  DBConnect.rs.getObject(i);
            }
            ((DefaultTableModel) table.getModel()).insertRow( DBConnect.rs.getRow()-1,row);
        }

        con.close();
    }
    catch(SQLException e)
    {
        JOptionPane.showMessageDialog(this,e);
    }
} 
    ArrayList<String> lowname = new ArrayList<>();
     ArrayList<String> lowqty = new ArrayList<>();
     static String prefEmail = "";
     static String Efrom ="";
    static String Eto ="";
    static String Epass ="";
    static String Efront ="";
    static String Esubject ="";
    static String Ebody ="";
     static String Eweb="";
    int MINUTES = 10; // The delay in minutes
Timer timer = new Timer();
 
 public void sendEmail(){
           try{
               // check internet first
               //get items that are currently low
               //save them to arraylist
               //get preffered email
               //call class based on preferred email with details
               Process process = java.lang.Runtime.getRuntime().exec("ping www.google.com");
               if(process.waitFor() != 1){
               try{
                   lowname.removeAll(lowname);
                   lowqty.removeAll(lowqty);
                   Connection con = DBConnect.connect();
                   DBConnect.ps = con.prepareStatement("SELECT Iname,quantity FROM items WHERE quantity <= low");
                   DBConnect.rs =  DBConnect.ps.executeQuery();
                   while( DBConnect.rs.next()){
                       lowname.add(DBConnect.rs.getString(1));
                       lowqty.add(DBConnect.rs.getString(2));
                   }
                   if(lowname.size() > 0){
                       DBConnect.ps = con.prepareStatement("SELECT * FROM emailconfig where type = pref");
                       DBConnect.rs =  DBConnect.ps.executeQuery();
                       if( DBConnect.rs.next()){
                           prefEmail = DBConnect.rs.getString(8);
                           if(   "GMAIL".equals(prefEmail))
                           {
                               GMAILsend gs = new GMAILsend();
                               
                               Efrom = DBConnect.rs.getString(3);
                               Eto = DBConnect.rs.getString(4);
                               Epass = DBConnect.rs.getString(5);
                               Efront = "Equity bank low inventory";
                               Esubject = "CURRENTLY LOW ITEMS";
                               Ebody = "Hello,\nThe following items are low in stock: \n";
                               for(int i = 0; i<lowname.size();i++){
                                   Ebody += lowname.get(i) + ": ";
                                   Ebody += lowqty.get(i) + " Remaining.";
                                   Ebody += "\n";
                               }
                               Ebody += "Good Day.";
                               gs.sendGmail(Efrom, Eto, Epass, Efront, Esubject, Ebody);
                               
                           }
                           else
                           {
                               SendMailBySite sd = new SendMailBySite();
                               Efrom = DBConnect.rs.getString(3);
                               Eto = DBConnect.rs.getString(4);
                               Epass = DBConnect.rs.getString(5);
                               Eweb = DBConnect.rs.getString(7);
                               Esubject = "Equity bank low inventory";
                               Ebody = "Hello,\nThe following items are low in stock: \n";
                               for(int i = 0; i<lowname.size();i++){
                                   Ebody += lowname.get(i) + ": ";
                                   Ebody += lowqty.get(i) + " Remaining.";
                                   Ebody += "\n";
                               }
                               Ebody += "Good Day.";
                               sd.SendSite(Efrom, Eto, Epass, Esubject, Ebody,Eweb);
                           }    
                           
                       }}
                   con.close();
                   
               }
               catch (SQLException ex) {
                   JOptionPane.showMessageDialog(null, ex);
               }
               
           }
               else 
                   JOptionPane.showMessageDialog(null, "NO INTERNET CONNECTION TO SEND EMAIL ALERT");
           }
      catch (IOException | InterruptedException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE,null, ex);    
        }
             
 }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Add;
    private javax.swing.ButtonGroup Address;
    private javax.swing.JPanel Body;
    private javax.swing.JLabel ClearGmail;
    private javax.swing.JLabel ClearWeb;
    private javax.swing.JComboBox<String> ComboEmail;
    private javax.swing.JComboBox<String> ComboRemove;
    private javax.swing.JComboBox<String> ComboType;
    private javax.swing.JPasswordField Confirmnew;
    private javax.swing.JButton DeleteNewUser;
    private javax.swing.JDialog DialogSearchItemAdd;
    private javax.swing.JDialog DialogSearchItemRemove;
    private javax.swing.JTextField GFrom;
    private javax.swing.JTextField GPass;
    private javax.swing.JTextField GTo;
    private javax.swing.JPanel Header;
    private javax.swing.JPanel Inventory;
    private javax.swing.JTextField ItemNameAdd;
    private javax.swing.JTextField ItemQuanAdd;
    private javax.swing.JTextField ItemQuanRemove;
    private javax.swing.JTextField ItemidAdd;
    private javax.swing.JTextField ItemidRemove;
    private javax.swing.JPanel Manage;
    private javax.swing.JPanel Menu;
    private javax.swing.JTextField NameRemove;
    private javax.swing.JTextField Newpass;
    private javax.swing.JPanel Remove;
    private javax.swing.JPanel Reports;
    private javax.swing.JLabel SaveGmail;
    private javax.swing.JButton SaveNewUser;
    private javax.swing.JButton SaveNewUser1;
    private javax.swing.JLabel SavePreference;
    private javax.swing.JLabel SaveWeb;
    private javax.swing.JPanel Settings;
    private javax.swing.ButtonGroup Status;
    private javax.swing.JPanel Stock;
    private javax.swing.JTextField UserNamenew;
    private javax.swing.JTextField WebFrom;
    private javax.swing.JTextField WebPass;
    private javax.swing.JTextField WebTo;
    private javax.swing.JTextField Website;
    private javax.swing.JTextArea areaEmail;
    private javax.swing.JButton btnCItem;
    private javax.swing.JButton btnDItem;
    private javax.swing.JButton btnInventory;
    private javax.swing.JButton btnRemoveAdd;
    private javax.swing.JButton btnRemoveRemove;
    private javax.swing.JLabel btnReportReduction;
    private javax.swing.JLabel btnReportReduction1;
    private javax.swing.JLabel btnReportReduction2;
    private javax.swing.JLabel btnReportStock;
    private javax.swing.JButton btnReports;
    private javax.swing.JButton btnSItem;
    private javax.swing.JButton btnSItem4;
    private javax.swing.JButton btnSItem5;
    private javax.swing.JButton btnSItemAdd;
    private javax.swing.JButton btnSItemRemove;
    private javax.swing.JLabel btnSave3;
    private javax.swing.JButton btnSettings;
    private javax.swing.JButton btnSettings2;
    private javax.swing.JButton btnStock;
    private javax.swing.JButton btnStockRemove;
    private javax.swing.JButton btnStockS;
    private javax.swing.JButton btnUItem;
    private javax.swing.JTextField currentPass;
    private com.toedter.calendar.JDateChooser dateItemAdd;
    private com.toedter.calendar.JDateChooser dateItemRemove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField logaction;
    private com.toedter.calendar.JDateChooser logdateF;
    private com.toedter.calendar.JDateChooser logdateT;
    private javax.swing.JTextField logperson;
    private javax.swing.JPanel logsR;
    private javax.swing.JTextField redPerson;
    private javax.swing.JTextField redPerson1;
    private javax.swing.JTextField redS;
    private com.toedter.calendar.JDateChooser reddateF;
    private com.toedter.calendar.JDateChooser reddateF1;
    private com.toedter.calendar.JDateChooser reddateT;
    private com.toedter.calendar.JDateChooser reddateT1;
    private javax.swing.JTextField redname;
    private javax.swing.JTextField redname1;
    private javax.swing.JLabel searchreduction;
    private javax.swing.JLabel searchreduction1;
    private javax.swing.JLabel searchreduction2;
    private javax.swing.JLabel searchreduction3;
    private javax.swing.JLabel searchreduction4;
    private javax.swing.JLabel searchreduction5;
    private javax.swing.JTable tableAdditionRe;
    private javax.swing.JTable tableItem;
    private javax.swing.JTable tableItemAddS;
    private javax.swing.JTable tableItemRemove;
    private javax.swing.JTable tablelog;
    private javax.swing.JTable tablenewuser;
    private javax.swing.JTable tblAddition;
    private javax.swing.JTable tblReduction;
    private javax.swing.JTable tblRemoval;
    private javax.swing.JTable tblStock;
    private javax.swing.JTextField txtCountItem;
    private javax.swing.JTextField txtLowItem;
    private javax.swing.JTextField txtNameItem;
    private javax.swing.JTextField txtSearchItemAdd;
    private javax.swing.JTextField txtSearchItemRemove;
    private javax.swing.JTextField txtSearchItems;
    private javax.swing.JTextField txtSearchStock;
    private javax.swing.JTextField txtUnitItem;
    private javax.swing.JCheckBox viewconfirm;
    // End of variables declaration//GEN-END:variables
}
